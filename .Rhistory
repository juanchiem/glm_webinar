log(odds_B/odds_A)
odds_A=0.1066667/(1-0.1066667)
odds_B=0.093/(1-0.093)
log(odds_B/odds_A)
odds_A=0.1066667/(1-0.1066667)
odds_B=0.0933333/(1-0.0933333)
log(odds_B/odds_A)
OR_B_ = odds_B/odds_A
OR_B_
OR_B_A = odds_B/odds_A
OR_B_A = odds_B/odds_A
log_OR_B_A(OR_B_A)
OR_B_A = odds_B/odds_A
log_OR_B_A(OR_B_A)
log_OR_B_A = log(OR_B_A)
log_OR_B_A
summary(mod1)
# lo que nos da el emmeans
p_A = 0.1066667
p_B =  0.0933333
odds_A=p_A/(1-p_A)
odds_B=p_B/(1-p_B)
# lo que nos da el tab_model
OR_B_A = odds_B/odds_A
OR_B_A
# lo que nos da el summary
log_OR_B_A = log(OR_B_A)
log_OR_B_A
summary(mod1)
dat90 %>%
ggplot() +
aes(x=geno, y=inc_prop) +
geom_point()
mod2 <- glmer(
inc_prop ~ geno + (1|bk),
weights=n_plants,
family="binomial",
data=dat90)
car::Anova(mod2)
summary(mod2)
tab_model(mod2)
plot_model(mod2, type='pred', show.data=T)
em2 <- emmeans(mod2, ~ geno, type="response")
res2 <- cld(em2, Letters = letters, alpha = .05, type = "response")
knitr::kable(res2)
dat60_90
dat60_90 %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()
mod3 <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
car::Anova(mod3)
mod3.1 <- glmer(inc_prop ~ geno + days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
anova(mod3, mod3.1, test = "Chisq")
AIC(mod3, mod3.1)
summary(mod3)
tab_model(mod3)
summary(mod3)
tab_model(mod3)
plot_model(mod3,
terms = c("days", "geno"),
type='pred', show.data=T)
em3 <- emmeans(mod3, ~ geno|days, type="response")
res3 <- cld(em3, Letters = letters, alpha = .05, type = "response")
knitr::kable(res3)
dat
mod3 <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
mod3_ <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|plot),
weights=n_plants,
family="binomial",
data=dat60_90)
AIC(mod3, mod3_)
summary(mod3)
tab_model(mod3)
pacman::p_load(DHARMa)
mod_serie %>% testOutliers()
head(dat)
dat %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()
mod_serie <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),    # aleatorio bk y parcela
weights=n_plants,
family="binomial",
data=dat)
plot_model(mod_serie,
terms = c("days", "geno"),
type='pred', show.data=T)
# Sacamos el efecto del genotipo
mod_serie0 <- glmer(inc_prop ~ days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
mod_serie1 <- glmer(inc_prop ~ days + geno +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
anova(mod_serie0, mod_serie1, mod_serie, test = "Chisq")
AIC(mod_serie0, mod_serie1, mod_serie)
pacman::p_load(DHARMa)
mod_serie %>% testOutliers()
mod_serie %>% testDispersion()
testOutliers(mod_serie)
testDispersion(mod_serie)
ggpredict(mod_serie, c( "days", "geno"))
ggpredict(mod_serie,
terms = "days [100:110]", condition = c(geno = c("A")))
dat60_90
dat60_90 %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()
# debido a las mediciones repetidas en el tiempo agregamos efecto aleatorio sobre la parcela
mod3 <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
car::Anova(mod3)
car::Anova(mod3)
car::Anova(glmer(inc_prop ~ geno * factor(days) +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90))
mod3.1 <- glmer(inc_prop ~ geno + days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
anova(mod3, mod3.1, test = "Chisq")
AIC(mod3, mod3.1)
mod3_ <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|plot),
weights=n_plants,
family="binomial",
data=dat60_90)
AIC(mod3, mod3_)
head(dat)
dat %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()
# debido a las mediciones repetidas en el tiempo agregamos efecto aleatorio sobre la parcela
mod_serie <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
# Sacamos el efecto del genotipo
mod_serie0 <- glmer(inc_prop ~ days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
mod_serie1 <- glmer(inc_prop ~ days + geno +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
anova(mod_serie0, mod_serie1, mod_serie, test = "Chisq")
AIC(mod_serie0, mod_serie1, mod_serie)
testOutliers(mod_serie)
testDispersion(mod_serie)
summary(mod_serie)
tab_model(mod_serie)
plot_model(mod_serie,
terms = c("days", "geno"),
type='pred', show.data=T)
ggpredict(mod_serie,
terms = "geno",
condition = c(days = "100"))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
pacman::p_load(tidyverse,  # manipulacion general de datos
lme4,       # ajuste de modelos mixtos
DHARMa,     # diagnosticos de GLM
performance,# diagnosticos de LM
sjPlot,     # visualizacion de outputs
emmeans,    # estimacion de medias predichas por los modelos y comparaciones
ggeffects,  # predicciones
multcomp)   # letras de test de comparaciones multiples
theme_set(theme_bw())
# agregamos una funcion de ploteado rapido
# gghist <- function(x, e, m){
#   ggplot() +
#     aes(x)+
#     geom_histogram(binwidth=1, colour="gray30", fill="gray70") +
#     geom_vline(xintercept = e, col="blue")+
#     geom_vline(xintercept = m, col="red", linetype="dashed")
# }
# phom_raw <- import("https://raw.githubusercontent.com/juanchiem/agro_data/master/phomopsisp.csv") %>% tibble
phom_raw <- rio::import("data/phomopsis.csv") %>% tibble
phom_dat <- phom_raw %>%
mutate_at(vars(trt, bk), as.factor) %>%
mutate(inc=y/n) %>%
arrange(trt)
phom_dat %>%
ggplot() +
aes(x=trt, y = inc) +
geom_boxplot(alpha=.5, width = .2) +
geom_point(alpha=.7) +
labs(x="Tratamientos", y="Incidencia (proporción)")
theme_set(theme_bw())
set.seed(1)
set.seed(1)
x <- rnorm(n=100,    # sample size
mean=10,  # mean of sample
sd=3      # standard deviation of sample
)
head(x)
mean(x)
sd(x)
# predictor linear
mu = 3 + 2*x
plot(x, mu)
# generamos el componente aleatorio con distribucion normal de los errores
# set.seed(1)
y  <- mu + rnorm(100, 0, 3)
plot(x,y)
mod1 <- lm(y~x)
plot_model(mod1, type='pred', show.data=T, ci.lvl = NA)
summary(mod1)
mod1.1 <- glm(y~x, family = gaussian)
plot_model(mod1.1, type='pred', show.data=T, ci.lvl = NA)
summary(mod1.1)
gaussian()
binomial()
poisson()
bin_1 <- rbinom(
1,        # numero de observaciones o simulaciones (estaciones de muestreo)
size=30,  # numero de ensayos (n)
p=0.1     # probabilidad de exito (p)
)
bin_1
bin_1/30    # 1 valor de incidencia de estacion de muestreo
set.seed(1)
bin_2 <- rbinom(
10,       # numero de observaciones
size=30,  # numero de ensayos (n)
p=0.1     # probabilidad de exito (p)
)
bin_2       # muestra compuesta de 10 estaciones de muestreo con n=30
bin_2/30    # 10 valores de incidencia de n=30
mean(bin_2/30)
set.seed(1)
bin_3 <- rbinom(
100,    # numero de observaciones
size=30,  # numero de ensayos
p=0.1     # probabilidad de exito
)
bin_3
# gghist(bin_3, e=30*0.1, m=mean(bin_3))
bin_3/30 # 100 valores de incidencia de n=30
mean(bin_3/30)
# media = np
media = 30*0.1
media
# varianza  = np(1−p)
varianza =  30*0.1*(1-0.1)
varianza
# sd = sqrt(np(1−p))
sd =  sqrt(30*0.1*(1-0.1))
sd
# phom_raw <- import("https://raw.githubusercontent.com/juanchiem/agro_data/master/phomopsisp.csv") %>% tibble
phom_raw <- rio::import("data/phomopsis.csv") %>% tibble
phom_raw
phom_dat <- phom_raw %>%
mutate_at(vars(trt, bk), as.factor) %>%
mutate(inc=y/n) %>%
arrange(trt)
phom_dat
phom_dat %>%
ggplot() +
aes(x=trt, y = inc) +
geom_boxplot(alpha=.5, width = .2) +
geom_point(alpha=.7) +
labs(x="Tratamientos", y="Incidencia (proporción)")
# pacman::p_load(lmerTest)
mod_phom_LM <- lmer(inc ~ trt + (1|bk),
data=phom_dat)
performance::check_homogeneity(mod_phom_LM)
performance::check_normality(mod_phom_LM)
car::Anova(mod_phom_LM, type="III")
summary(mod_phom_LM)
em_phom_LM <- emmeans(mod_phom_LM, ~ trt, type="response")
em_phom_LM
# comparaciones multiples
res_phom_LM <- cld(em_phom_LM, Letters = letters, alpha = .05, type = "response")
knitr::kable(res_phom_LM)
plot_model(mod_phom_LM, type='pred', show.data=T)
c_t1 = 0.4366667
c_t2 = 0.4366667 +(-0.15667)
c_t2
c_t3 = 0.4366667 +(-0.29000)
c_t3
c_t3 = 0.4366667 +(-0.29000)
c_t3
mod_phom_LM2 <- glmer(inc ~ trt + (1|bk),
family = gaussian("identity"),
data=phom_dat)
summary(mod_phom_LM2)
summary(mod_phom_LM)
mod_phom_LM2 <- glmer(inc ~ trt + (1|bk),
family = gaussian("identity"),
data=phom_dat)
mod_phom_GLM1 <- glmer(
cbind(y, n-y) ~ trt + (1|bk), # matriz de exitos y fracasos
family="binomial",
data=phom_dat)
summary(mod_phom_GLM1)
phom_dat
mod_phom_GLM2 <- glmer(inc ~ trt + (1|bk),
family="binomial",
weights = n, # pesos o tamaño de muestra
data=phom_dat)
summary(mod_phom_GLM2)
tab_model(mod_phom_GLM1, mod_phom_GLM2)
testOutliers(mod_phom_GLM2)
testDispersion(mod_phom_GLM2)
testOutliers(mod_phom_GLM2)
testDispersion(mod_phom_GLM2)
em_phom_GLM <- emmeans(mod_phom_GLM2, ~ trt, type="response")
res_phom_GLM <- cld(em_phom_GLM, Letters = letters, alpha = .05, type = "response")
knitr::kable(res_phom_GLM)
knitr::kable(res_phom_LM)
summary(mod_phom_GLM2)
knitr::kable(res_phom_GLM)
p_t1 = 0.4357251
odds_t1 = 0.4357251 / (1-0.4357251)
odds_t1
log(odds_t1)
LO_t1
summary(mod_phom_GLM2)
p_t2 = 0.2763751
odds_t2 = 0.2763751 / (1-0.2763751)
odds_t2
odds_t1
OR_t2_t1 = odds_t2/odds_t1
OR_t2_t1 #  0.4946108
log(OR_t1_t2) # chequear con summary
summary(mod_phom_GLM2)
log(OR_t2_t1) # chequear con summary
odds_t2
# similar al LM?
log(odds_t2) - log(odds_t1)
# t2 directamente del summary
exp(-0.7040)
OR_t1_t2
OR_t2_t1
tab_model(mod_phom_GLM2)
raw <- rio::import("data/maracuya.csv") %>% tibble
dat <- raw %>%
mutate_at(vars(geno, bk), as.factor) %>%
mutate(inc_prop=dis_plants/n_plants,
plot = interaction(bk,geno))  # %>%
dat %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()+
geom_line(aes(group=interaction(bk,geno)))
# solo una evaluación a los 60 dias
dat60 <- dat %>%
filter(days %in% c(60))
# solo una evaluación a los 90 dias
dat90 <- dat %>%
filter(days %in% c(90))
# Dos evaluaciones: a los 60 y 90 dias
dat60_90 <- dat %>%
filter(days %in% c(60, 90)) # %>%
# mutate_at(vars(days), as.factor)
dat60
dat60 %>%
ggplot() +
aes(x=geno, y=inc_prop) +
geom_jitter(alpha=.5, width=.02)
mod1 <- glmer(
inc_prop ~ geno + (1|bk), # bloque como efecto aleatorio
weights=n_plants,
family="binomial",
data=dat60)
car::Anova(mod1)
summary(mod1)
tab_model(mod1)
em1 <- emmeans(mod1, ~ geno, type="response")
res1 <- cld(em1, Letters = letters, alpha = .05, type = "response")
knitr::kable(res1)
# lo que nos da el emmeans
p_A = 0.1066667
p_B =  0.0933333
odds_A= p_A/(1-p_A)
odds_B = p_B/(1-p_B)
# lo que nos da el tab_model
OR_B_A = odds_B/odds_A
OR_B_A
# lo que nos da el summary
log_OR_B_A = log(OR_B_A)
log_OR_B_A
summary(mod1)
dat90
dat90 %>%
ggplot() +
aes(x=geno, y=inc_prop) +
geom_point()
# mod1 <- glmer(
#   cbind(dis_plants, n_plants-dis_plants) ~ geno + (1|bk),
#   family="binomial",
#   data=dat60)
mod2 <- glmer(
inc_prop ~ geno + (1|bk),
weights=n_plants,
family="binomial",
data=dat90)
# boundary (singular) fit: see help('isSingular') puede deberse al bajo numero de bk
car::Anova(mod2)
summary(mod2)
plot_model(mod2, type='pred', show.data=T)
em2 <- emmeans(mod2, ~ geno, type="response")
res2 <- cld(em2, Letters = letters, alpha = .05, type = "response")
knitr::kable(res2)
dat60_90 %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()
mod3 <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
car::Anova(mod3)
car::Anova(glmer(inc_prop ~ geno * factor(days) +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90))
mod3.1 <- glmer(inc_prop ~ geno + days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat60_90)
anova(mod3, mod3.1, test = "Chisq")
AIC(mod3, mod3.1)
mod3_ <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|plot),
weights=n_plants,
family="binomial",
data=dat60_90)
AIC(mod3, mod3_)
summary(mod3)
tab_model(mod3)
plot_model(mod3,
terms = c("days", "geno"),
type='pred', show.data=T)
em3 <- emmeans(mod3, ~ geno|days, type="response")
res3 <- cld(em3, Letters = letters, alpha = .05, type = "response")
knitr::kable(res3)
head(dat)
dat %>%
ggplot() +
aes(x=days, y=inc_prop, col=geno, shape=bk)+
geom_point()
mod_serie <- glmer(inc_prop ~ geno * days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
# Sacamos el efecto del genotipo
mod_serie0 <- glmer(inc_prop ~ days +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
mod_serie1 <- glmer(inc_prop ~ days + geno +
(1|bk) + (1|bk:geno),
weights=n_plants,
family="binomial",
data=dat)
anova(mod_serie0, mod_serie1, mod_serie, test = "Chisq")
AIC(mod_serie0, mod_serie1, mod_serie)
testOutliers(mod_serie)
testDispersion(mod_serie)
summary(mod_serie)
tab_model(mod_serie)
plot_model(mod_serie,
terms = c("days", "geno"),
type='pred', show.data=T)
tab_model(mod_serie)
ggpredict(mod_serie, c( "days", "geno"))
ggpredict(mod_serie,
terms = "days [100:110]",
condition = c(geno = c("A")))
ggpredict(mod_serie,
terms = "geno",
condition = c(days = "100"))
plot_model(mod_serie,
terms = c("days", "geno"),
type='pred', show.data=T)
